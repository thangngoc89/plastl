name: Build and Release Plastl

on:
  release:
    types: [published]
  workflow_dispatch:  # allows manual run

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies via uv
        run: |
          uv venv
          uv pip install -e .

      - name: Build app with PyInstaller
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            uv run pyinstaller --windowed --icon=assets/plastl.icns --add-data="assets:assets" plastl.py
            cd dist && zip -r plastl-macos-arm64.app.zip plastl.app
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            uv run pyinstaller --windowed --onefile --add-data="assets:assets" plastl.py
            zip dist/plastl-linux-x64.zip dist/plastl
          fi

      - name: Build and Zip on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          uv run pyinstaller --windowed --onefile --icon=assets/plastl.ico --add-data="assets:assets" plastl.py
          Compress-Archive -Path dist/plastl.exe -DestinationPath dist/plastl-windows-x64.zip

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}